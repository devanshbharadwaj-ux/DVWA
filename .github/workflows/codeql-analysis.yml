name: "CodeQL with-DefectDojo Upload"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  analyze:
    runs-on: ubuntu-latest
    permissions:
      security-events: write   # Required for code scanning alerts
      actions: read
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Detect repository languages
        id: detect
        run: |
          echo "Fetching languages via GitHub API..."
          # Get JSON of languages
          LANG_JSON=$(curl -s -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${GITHUB_REPOSITORY}/languages)
          
          # Convert JSON keys to comma-separated list
          LANGS=$(echo $LANG_JSON | jq -r 'keys | join(",")')
          
          # Map GitHub language names to CodeQL language names
          # Adjust as needed; common mappings:
          LANGS=$(echo $LANGS | sed -E 's/TypeScript/javascript/g; s/C\+\+/cpp/g; s/C/C/g; s/JavaScript/javascript/g; s/Python/python/g; s/Java/java/g')
          
          echo "Detected languages: $LANGS"
          echo "languages=$LANGS" >> $GITHUB_OUTPUT

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript,python

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        id: analyze
        uses: github/codeql-action/analyze@v3
        with:
          output: results   # Save SARIF results in "results/"

      # Save SARIF as GitHub Artifact
      - name: Upload CodeQL Results Artifact
        uses: actions/upload-artifact@v4
        with:
          name: codeql-sarif-results
          path: results

      # Upload SARIF to DefectDojo
      - name: Upload SARIF to DefectDojo
        run: |
          for f in results/*.sarif; do
            echo "Uploading $f to DefectDojo..."
            curl -s -o response.json -w "%{http_code}" -X POST "${{ secrets.DEFECTDOJO_HOST }}/api/v2/import-scan/" \
              -H "Authorization: Token ${{ secrets.DEFECTDOJO_API_KEY }}" \
              -F "file=@$f;type=application/json" \
              -F "scan_type=CodeQL" \
              -F "product_name=MyProduct" \
              -F "engagement_name=code-ql" \
              -F "auto_create_context=true" \
              -F "active=true" \
              -F "verified=false"
            echo "Response:"
            cat response.json
          done



